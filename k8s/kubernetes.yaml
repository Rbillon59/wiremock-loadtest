apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiremock
  labels:
    type: wiremock
spec:
  replicas: 1
  selector:
    matchLabels:
      type: wiremock
  template:
    metadata:
      labels:
        type: wiremock         
    spec:
      containers:
      - name: wiremock
        image: rbillon59/wiremock-loadtest:2.30.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: wiremock-mapping
          mountPath: /home/wiremock/mappings
        resources:
          requests:
            memory: "1024Mi"
            cpu: "1024m"
          limits:
            memory: "1024Mi"
            cpu: "1024m"
        livenessProbe:
          exec:
            command:
            - cat
            - /bin/cat
        readinessProbe:
          tcpSocket:
            port: 8080
      volumes:
        - name: wiremock-mapping
          configMap:
            name: wiremock-mapping
---
apiVersion: v1
kind: Service
metadata:
  name: wiremock-svc
  labels:
    type: wiremock
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    type: wiremock
  type: LoadBalancer
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-wiremock
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wiremock
  targetCPUUtilizationPercentage: 30
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wiremock-mapping
data:
  static.json: |-
    {
    "request": {
      "method": "GET",
      "url": "/static"
      },
        "response": {
          "status": 200,
          "fixedDelayMilliseconds": 50,
          "jsonBody": {
            "data": [{
              "type": "product",
              "id": "1",
              "attributes": {
                "productName": "Raspberry PI",
                "productDescription": "Best product ever",
                "price": 42,
                "stock": 500
              }
            }]
          }
        }
      }
  dynamic.json: |-
    {
      "request": {
        "method": "GET",
        "urlPathPattern": "/dynamic/.*"
      },
      "response": {
        "status": 200,
        "fixedDelayMilliseconds": 1000,
        "transformers": ["response-template"],
        "jsonBody": {
          "data": [{
            "type": "product",
            "id": "1",
            "attributes": {
              "productName": "{{request.pathSegments.[1]}}",
              "productDescription": "Best product ever",
              "price": 42,
              "stock": 500
            }
          }]
        }
      }
    }